openapi: 3.0.0
info:
  title: Job Application API
  description: API for managing usersjob applications
  version: '1.0'
paths:
  /api/job-applications/create:
    post:
      summary: Create a new job application
      tags:
        - Job Applications
      description: Creates a new job application and associates it with the authenticated user.
      security:
        - bearerAuth: [] # Assumes you have defined bearerAuth under the components.securitySchemes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                company:
                  type: string
                  description: Name of the company where the user is applying.
                jobTitle:
                  type: string
                  description: The position or title being applied for.
                dateApplied:
                  type: Date
                  description: Date that position was applied on.
                status:
                  type: string
                  description: Status of the job application.
                source:
                  type: string
                  description: Source of the job application.
              required:
                - company
                - jobTitle
                - dateApplied
                - status
      responses:
        201:
          description: Job application created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Job application created successfully
                  jobApplication:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: 5f8d04fee618f1768438157e
                      companyName:
                        type: string
                        example: ExampleCorp
                      jobTitle:
                        type: string
                        example: Frontend Developer
                      dateApplied:
                        type: Date
                        example: 2024-03-01
                      status:
                        type: string
                        example: Applied
        400:
          description: Error creating job application
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error creating job application
  /api/job-applications:
    get:
      summary: Get all job applications for the authenticated user
      tags:
        - Job Applications
      description: Retrieves a list of all job applications created by the authenticated user.
      security:
        - bearerAuth: [] # Assumes you have defined bearerAuth under the components.securitySchemes
      responses:
        200:
          description: A list of job applications
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: 5f8d04fee618f1768438157e
                    company:
                      type: string
                      example: ExampleCorp
                    jobTitle:
                      type: string
                      example: Software Engineer
                    dateApplied:
                      type: Date
                      example: 2024-03-01
                    status:
                      type: string
                      example: Applied
                    user:
                      type: string
                      example: 5f8d04fee618f1768438157e
        500:
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: An error occurred while retrieving job applications.
  /api/job-applications/{id}:
    get:
      summary: Get a single job application by ID
      tags:
        - Job Applications
      description: Retrieves a specific job application by its ID, provided the job application belongs to the authenticated user.
      security:
        - bearerAuth: [] # This references the security scheme defined in the components section
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the job application to retrieve.
      responses:
        200:
          description: Details of the specified job application
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    example: 5f8d04fee618f1768438157e
                  company:
                    type: string
                    example: ExampleCorp
                  jobTitle:
                    type: string
                    example: Software Engineer
                  dateApplied:
                    type: Date
                    example: 2024-03-01
                  status:
                    type: string
                    example: Applied
                  user:
                    type: string
                    example: 5f8d04fee618f1768438157e
        404:
          description: Job application not found or access denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Job application not found or access denied
        500:
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: An error occurred while retrieving the job application.
  /api/job-applications/update/{id}:
    put:
      summary: Update a job application by ID
      tags:
        - Job Applications
      description: Updates the specified job application by its ID, provided the job application belongs to the authenticated user.
      security:
        - bearerAuth: [] # This references the security scheme defined in the components section
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the job application to update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                company:
                  type: string
                  description: Updated name of the company.
                jobTitle:
                  type: string
                  description: Updated position or title.
                status:
                  type: string
                  description: Updated status of the job application.
              example:
                company: 'NewCorp'
                jobTitle: 'Senior Developer'
                status: 'Interview'
      responses:
        200:
          description: Job application updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Job application updated successfully
                  jobApplication:
                    $ref: '#/components/schemas/JobApplication'
        404:
          description: Job application not found or access denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Job application not found or access denied
        500:
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: An error occurred while updating the job application.
  /api/job-applications/delete/{id}:
    delete:
      summary: Delete a job application by ID
      tags:
        - Job Applications
      description: Deletes a specific job application by its ID, provided the job application belongs to the authenticated user.
      security:
        - bearerAuth: [] # Assumes you have defined bearerAuth under the components.securitySchemes
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the job application to delete.
      responses:
        200:
          description: Job application deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Job application deleted successfully
        404:
          description: Job application not found or access denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Job application not found or access denied
        500:
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: An error occurred while deleting the job application.
components:
  schemas:
    JobApplication:
      type: object
      properties:
        _id:
          type: string
          example: 5f8d04fee618f1768438157e
        company:
          type: string
          example: ExampleCorp
        jobTitle:
          type: string
          example: Software Engineer
        dateApplied:
          type: string
          example: 2024-03-01
        status:
          type: string
          example: Applied
        source:
          type: string
          example: LinkedIn
        location:
          type: string
          example: Remote
        contactEmail:
          type: string
          example:
        contactPhone:
          type: string
          example:
        interviewDates:
          type: array
          items:
            type: string
          example: ['2024-03-01', '2024-03-02']
        user:
          type: string
          example: 5f8d04fee618f1768438157e
